# If running inside a Docker container: use 127.0.0.1
# If running in your local network: put IP address accessible from your cameras.
SURV_SERVER_FTP_BIND_HOST=192.168.1.41
SURV_SERVER_FTP_BIND_PORT=2121

# Enter any credentials here and use them in the Cameras.
SURV_SERVER_FTP_UPLOAD_USER=user
SURV_SERVER_FTP_UPLOAD_PASSWORD=12345

# FTP works via two connections: (1) for commands and (2) for data transfers.
# FTP can operate in 2 modes:
# - active - client starts listening on a port, declares this port to the server, the server connects to
#            this port for the data transfer;
# - passive - server starts listening on a port, client connects to this port for the data transfer.
# If a camera is behind a NAT router then server will not be able to connect to it and we need passive mode.

# For passive mode the FTP server needs to know its real IP address by which the camera can connect to it.
SURV_SERVER_FTP_NAT_ADDRESS=123.123.123.123

# The following ports should be open for connections in firewall of the server.
SURV_SERVER_FTP_PASSIVE_PORTS_FROM=60000
SURV_SERVER_FTP_PASSIVE_PORTS_TO=65535

# or DEBUG
SURV_SERVER_FTP_LOG_LEVEL=INFO

# Directory where the server will start the photos and Telegram user database.
SURV_SERVER_DATA_DIR=../data

# Connect BotFather in Telegram and create a new bot with /newbot command.
# Obtain a token of the new bot and put it here.
SURV_SERVER_TELEGRAM_BOT_TOKEN="1234567890:qwertyuiopoiuytrewqwertyuiop"

# Put here your Telegram username.
# Your new bot will talk to you only and to the users you add to it via
# /add_user command.
# The bot will not send anything to other users.
SURV_SERVER_TELEGRAM_BOT_ADMIN=telegram_username_of_bot_admin

SURV_SERVER_TELEGRAM_PHOTO_EXTENSIONS_TO_SEND_CSV=jpg,png